program macro
    use, intrinsic :: iso_fortran_env
    implicit none

    #:def ASSERT(cond)
        if (.not. ${cond}$) then
            write (error_unit, '(3A,I0,A)') "assertion failed: ", __FILE__, ", line ", __LINE__, "."
            error stop
        end if
    #:enddef ASSERT

    integer(int32) :: result
    result = 1 + 1

    @:ASSERT(result == 3)
end program macro
#:mute
#! fypp macro.fy90 macro.f90
#! â†“
#! program macro
#!     use, intrinsic :: iso_fortran_env
#!     implicit none
#!
#!
#!     integer(int32) :: result
#!     result = 1 + 1
#!
#!         if (.not. result == 3) then
#!             write (error_unit, '(3A,I0,A)') "assertion failed: ", __FILE__, ", line ", __LINE__, "."
#!             error stop
#!         end if
#! end program macro
#:endmute
